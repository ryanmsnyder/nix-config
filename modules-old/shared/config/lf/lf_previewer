#!/usr/bin/env bash
# File preview handler for lf.
file=$1
w=$2
h=$3
x=$4
y=$5

set -C -f
IFS="$(printf '%b_' '\n')"; IFS="${IFS%_}"

CACHE_DIR="${XDG_DATA_HOME:-$HOME}/.cache/lf"
# [ ! -d "${XDG_CACHE_HOME:-$HOME/.cache}/lf" ] && mkdir -p "${XDG_CACHE_HOME:-$HOME/.cache}/lf"

echo -e "1: $1\n2: $2\n3: $3\n4: $4\n5: $5" >> ~/Desktop/debug.txt

preview() {
    kitty +kitten icat --silent --stdin no --transfer-mode file --place "${w}x${h}@${x}x${y}" "$1" < /dev/null > /dev/tty
}

cache_filename() {
    echo "$CACHE_DIR/thumb.$(stat -f '%N\0%i\0%HT\0%z\0%a\0%m' -- "$(readlink -f "$file")" | sha256sum | cut -d' ' -f1)"
}


create_ql_thumb() {
  # create thumbnail with MacOS QuickLook command line utility qlmanage
  # qlmanage takes an output directory but it can't take a file name so the file needs to be renamed after creation 
  original_file="$1"
  new_file_name="$2"
  # Get the basename of the original file
  base_name=$(basename "$original_file")

  # Run qlmanage with a 2 second timeout (useful for .msg files that qlmanage doesn't handle anymore)
  gtimeout 1 qlmanage -t -f 10 -o $CACHE_DIR "$original_file" > /dev/null
  exit_status=$?

  # Check if qlmanage timed out or failed
  if [[ $exit_status -eq 124 ]]; then
    echo "qlmanage timed out after 1 second"
    return $exit_status
  elif [[ $exit_status -ne 0 ]]; then
    echo "qlmanage failed with exit status $exit_status"
    return $exit_status
  fi
  
  mv "$CACHE_DIR/$base_name.png" "$new_file_name.png"
}


eml_to_html() { 
  node "$HOME/.config/lf/email_previewer/main.js" "$1" "$2"
}


# Note that the cache file name is a function of file information, meaning if
# an image appears in multiple places across the machine, it will not have to
# be regenerated once seen.
file="$1"; shift
case "$(file --dereference --brief --mime-type -- "$file")" in
    image/avif) CACHE=$(cache_filename)
        [ ! -f "$CACHE" ] && convert "$file" "$CACHE.jpg"
        preview "$CACHE.jpg" ;;
    image/*) preview "$file" ;;
    text/html) lynx -width="$3" -display_charset=utf-8 -dump "$file" ;;
    text/troff) man ./ "$file" | col -b ;;
    text/* | */xml | application/json) bat --terminal-width "$(($3-2))" -f "$file" ;;
    audio/* | application/octet-stream) mediainfo "$file" || exit 1 ;;
    video/* )
        CACHE=$(cache_filename)
        [ ! -f "$CACHE" ] && ffmpegthumbnailer -i "$file" -o "$CACHE" -s 0
        preview "$CACHE"
    ;;
    */pdf)
        CACHE=$(cache_filename)
        echo "$CACHE" > /Users/ryan.snyder/Desktop/cache.txt

        [ ! -f "$CACHE.jpg" ] && pdftoppm -jpeg -f 1 -singlefile "$file" "$CACHE"
        preview "$CACHE.jpg"
        ;;
    */epub+zip|*/mobi*)
        CACHE=$(cache_filename)
        [ ! -f "$CACHE.png" ] && create_ql_thumb "$file" "$CACHE"
        preview "$CACHE.png" 
        ;;
    # use MacOS builtin qlmanage to create thumbnails for Microsoft Office files
    application/vnd*) 
        CACHE=$(cache_filename)
        [ ! -f "$CACHE.png" ] && create_ql_thumb "$file" "$CACHE"
        preview "$CACHE.png" 
        ;; 
    # convert eml emails to html and preview with lynx
    message/rfc822)
        CACHE=$(cache_filename)
        [ ! -f "$CACHE.html" ] && eml_to_html "$file" "$CACHE"
        lynx -width="$3" -display_charset=utf-8 -dump "$CACHE.html"
        ;;
    application/*zip) atool --list -- "$file" ;;
    application/pgp-encrypted) gpg -d -- "$file" ;;
esac
exit 1
